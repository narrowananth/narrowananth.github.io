{"version":3,"file":"vajroPlugin.js","mappings":"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","sources":["webpack://vajroPlugin/webpack/bootstrap","webpack://vajroPlugin/webpack/runtime/define property getters","webpack://vajroPlugin/webpack/runtime/hasOwnProperty shorthand","webpack://vajroPlugin/webpack/runtime/make namespace object","webpack://vajroPlugin/./src/utils/common.utils.ts","webpack://vajroPlugin/./src/utils/plugin.utils.ts","webpack://vajroPlugin/./src/service/offerApplies.core.ts","webpack://vajroPlugin/./src/index.ts","webpack://vajroPlugin/./src/controller/plugin.controller.ts","webpack://vajroPlugin/./src/service/discount.core.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n\tConfigSchema,\n\tBuyProduct,\n\tGetProduct,\n\tBuyCollection,\n\tGetCollection,\n\tLineItem,\n\tLineItemObject,\n\tBuildInputData\n} from \"../interface/common.schema\"\n\nexport const schemaReBuilder = (configSchema: ConfigSchema): object => {\n\tconst {\n\t\tbuyCollections = [],\n\t\tgetCollections = [],\n\t\tbuyProducts = [],\n\t\tgetProducts = [],\n\t\tgetProductCount\n\t} = configSchema\n\n\tconst buyVariantIdList = buyProducts.map((product: BuyProduct) => product.variantId)\n\n\tconfigSchema.customBuyProduct = buyVariantIdList\n\n\tconst getVariantIdList = getProducts.map((product: GetProduct) => product.variantId)\n\n\tconfigSchema.customGetProduct = getVariantIdList\n\n\tconst buyCollectionIdList = buyCollections.map(\n\t\t(collection: BuyCollection) => collection.collectionId\n\t)\n\n\tconfigSchema.customBuyCollection = buyCollectionIdList\n\n\tconst getCollectionIdList = getCollections.map(\n\t\t(collection: GetCollection) => collection.collectionId\n\t)\n\n\tconfigSchema.customGetCollection = getCollectionIdList\n\n\tif (!getProductCount) configSchema.getProductCount = 0\n\n\treturn configSchema\n}\n\nexport const buildInputData = (\n\tgetConfigSchema: BuildInputData | any,\n\tlineItems: LineItem[]\n): object => {\n\tconst getRemovedProductList = removeExistingDiscount(lineItems) || []\n\n\tconst modifiedLineItem = resetInputLineItem(lineItems)\n\n\tconst config = {\n\t\tgetConfigSchema,\n\t\t...getConfigSchema,\n\t\tlineItems: modifiedLineItem,\n\t\tgetRemovedProductList\n\t}\n\n\treturn config\n}\n\nexport const resetInputLineItem = (lineItems: LineItem[]): Array<LineItem> => {\n\tconst modifiedLineItem = lineItems.map((lineItem: LineItem) => {\n\t\tconst { originalUnitPrice } = lineItem\n\n\t\tlineItem.unitPrice = originalUnitPrice\n\n\t\treturn lineItem\n\t})\n\n\treturn modifiedLineItem\n}\n\nexport const removeExistingDiscount = (lineItems: LineItem[]): Array<object> => {\n\tconst getRemoveItemsList = lineItems\n\n\treturn getRemoveItemsList.map((lineItem: LineItem) => {\n\t\tconst { originalUnitPrice } = lineItem\n\n\t\tlineItem.unitPrice = originalUnitPrice\n\n\t\treturn lineItem\n\t})\n}\n\nexport const getLineItemsObj = (lineItems: LineItem[]): LineItemObject => {\n\treturn lineItems.reduce((acc: LineItemObject, lineItem: LineItem) => {\n\t\tconst { variantId } = lineItem\n\n\t\tacc[variantId] = lineItem\n\n\t\treturn acc\n\t}, {})\n}\n","import {\n\tCombineSchemaInputArray,\n\tCombineSchemaOfferArray,\n\tFindFreeOfferOverAllCartValue,\n\tFindUserProductCartTotal,\n\tValidateBuyArrayAvaliable,\n\tValidateGetArrayAvaliable,\n\tValidateGetProductCount,\n\tValidateInputData,\n\tValidateOverAllData\n} from \"../interface/plugin.utils.schema\"\nimport { LineItem } from \"../interface/common.schema\"\nimport { getLineItemsObj } from \"./common.utils\"\n\nexport const combineSchemaInputArray = (data: CombineSchemaInputArray): Array<string> => {\n\tconst {\n\t\tofferCategory,\n\t\tcustomBuyCollection,\n\t\tcustomGetCollection,\n\t\tcustomBuyProduct,\n\t\tcustomGetProduct,\n\t\tgetProductCount\n\t} = data\n\n\tconst xValue =\n\t\tcustomBuyProduct.length > 0 || customBuyCollection.length > 0\n\t\t\t? customBuyProduct.concat(customBuyCollection)\n\t\t\t: []\n\n\tconst yValue =\n\t\tgetProductCount === 0 && (customGetProduct.length > 0 || customGetCollection.length > 0)\n\t\t\t? customGetProduct.concat(customGetCollection)\n\t\t\t: []\n\n\tconst combinedArray = offerCategory !== \"automaticOffers\" ? xValue.concat(yValue) : xValue\n\n\treturn combinedArray\n}\n\nexport const combineSchemaOfferArray = (data: CombineSchemaOfferArray): any => {\n\tconst { customBuyCollection, customGetCollection, customBuyProduct, customGetProduct } = data\n\n\tconst xValue = customGetProduct.length > 0 ? customGetProduct : customBuyProduct\n\n\tconst yValue = customGetCollection.length > 0 ? customGetCollection : customBuyCollection\n\n\tconst buyAlternativeArray =\n\t\tcustomBuyProduct.length > 0 && customGetCollection.length > 0 ? customGetCollection : []\n\n\tconst getAlternativeArray =\n\t\tcustomGetProduct.length > 0 && customBuyCollection.length > 0 ? customGetProduct : []\n\n\tconst combinedArray =\n\t\tbuyAlternativeArray.length > 0 || getAlternativeArray.length > 0\n\t\t\t? buyAlternativeArray.concat(getAlternativeArray)\n\t\t\t: xValue.concat(yValue)\n\n\treturn combinedArray\n}\n\nexport const findOverAllCartTotal = (lineItems: LineItem[]): number => {\n\treturn lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { unitPrice, quantity } = lineItem\n\n\t\treturn (acc += unitPrice * quantity)\n\t}, 0)\n}\n\nexport const findOfferLineItemTotal = (lineItems: LineItem[]): number => {\n\treturn lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { customGetProductPrice, freeQuantity } = lineItem\n\n\t\treturn (acc += customGetProductPrice * freeQuantity)\n\t}, 0)\n}\n\nexport const afterDiscountCalcCartTotal = (\n\tlineItems: LineItem[],\n\tgetDiscoutOffer: any,\n\tofferCategory: string\n): number => {\n\tif (offerCategory !== \"automaticOffers\") {\n\t\tconst sanitizedLineItem = getLineItemsObj(getDiscoutOffer)\n\n\t\treturn lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { variantId, unitPrice: actualUnitPrice, quantity: actualQuantity } = lineItem\n\n\t\t\tconst {\n\t\t\t\tunitPrice: offerAppliesUnitPrice,\n\t\t\t\tquantity: offerAppliesQuantity,\n\t\t\t\tfreeQuantity = 0\n\t\t\t} = sanitizedLineItem[variantId] || {}\n\n\t\t\tconst finalUnitPrice =\n\t\t\t\tofferAppliesUnitPrice || offerAppliesUnitPrice === 0\n\t\t\t\t\t? offerAppliesUnitPrice\n\t\t\t\t\t: actualUnitPrice\n\n\t\t\tconst localQuantity = offerAppliesQuantity || actualQuantity\n\n\t\t\tconst finalQuantity = localQuantity - freeQuantity\n\n\t\t\treturn (acc += finalUnitPrice * finalQuantity)\n\t\t}, 0)\n\t} else {\n\t\tconst currentLineItemTotal = findOverAllCartTotal(lineItems)\n\n\t\tconst offerLineItemTotal = findOfferLineItemTotal(getDiscoutOffer)\n\n\t\treturn currentLineItemTotal - offerLineItemTotal\n\t}\n}\n\nexport const validateInputData = (data: ValidateInputData): boolean => {\n\tconst { cartType, cartValue, lineItems } = data\n\n\tconst getCombinedArray = combineSchemaInputArray(data)\n\n\tconst total = getCombinedArray.reduce((total: number, id: string) => {\n\t\tconst sum = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId, quantity, unitPrice } = lineItem || {}\n\n\t\t\tif (variantId === id || collectionId === id) {\n\t\t\t\tconst currentValue = cartType === \"amount\" ? quantity * unitPrice : quantity\n\n\t\t\t\tacc += currentValue\n\t\t\t}\n\n\t\t\treturn acc\n\t\t}, 0)\n\n\t\treturn (total += sum)\n\t}, 0)\n\n\treturn total >= cartValue\n}\n\nexport const validateOverAllData = (data: ValidateOverAllData): boolean => {\n\tconst { cartType, cartValue, lineItems } = data\n\n\tconst total = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { quantity, unitPrice } = lineItem\n\n\t\tconst currentValue = cartType === \"amount\" ? quantity * unitPrice : quantity\n\n\t\treturn (acc += currentValue)\n\t}, 0)\n\n\treturn total >= cartValue\n}\n\nexport const findFreeOfferOverAllCartValue = (data: FindFreeOfferOverAllCartValue): boolean => {\n\tconst { cartType, cartValue, lineItems, customGetProduct = [] } = data\n\n\tconst customLineItem = lineItems || []\n\n\tconst filteredGetProduct = customLineItem.filter(\n\t\t(obj: LineItem) => !customGetProduct.some((id: string) => id === obj.variantId)\n\t)\n\n\tconst total = filteredGetProduct.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { quantity, unitPrice } = lineItem\n\n\t\tconst currentValue = cartType === \"amount\" ? quantity * unitPrice : quantity\n\n\t\treturn (acc += currentValue)\n\t}, 0)\n\n\treturn total >= cartValue\n}\n\nexport const validateBuyArrayAvaliable = (data: ValidateBuyArrayAvaliable): boolean => {\n\tconst { customBuyProduct, customBuyCollection, lineItems } = data\n\n\tconst validationArray = customBuyProduct.concat(customBuyCollection)\n\n\treturn validationArray.some((id: string) => {\n\t\treturn lineItems.some((lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId } = lineItem || {}\n\n\t\t\treturn variantId === id || collectionId === id\n\t\t})\n\t})\n}\n\nexport const validateGetArrayAvaliable = (data: ValidateGetArrayAvaliable): boolean => {\n\tconst { customGetProduct, customGetCollection, lineItems } = data\n\n\tconst validationArray = customGetProduct.concat(customGetCollection)\n\n\treturn validationArray.some((id: string) => {\n\t\treturn lineItems.some((lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId } = lineItem || {}\n\n\t\t\treturn variantId === id || collectionId === id\n\t\t})\n\t})\n}\n\nexport const validateGetProductCount = (data: ValidateGetProductCount): boolean => {\n\tconst { customGetProduct, getProductCount, lineItems } = data\n\n\tconst quantity = customGetProduct.reduce((count: number, id: string) => {\n\t\tconst sum = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId, quantity } = lineItem || {}\n\n\t\t\tif (variantId === id || collectionId === id) acc += quantity\n\n\t\t\treturn acc\n\t\t}, 0)\n\n\t\treturn (count += sum)\n\t}, 0)\n\n\treturn quantity >= getProductCount\n}\n\nexport const findUserProductCartTotal = (data: FindUserProductCartTotal): number => {\n\tconst { sanitizedLineItem, lineItems } = data\n\n\treturn sanitizedLineItem.reduce((total: number, key: string) => {\n\t\tconst sum = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId, quantity, unitPrice } = lineItem || {}\n\n\t\t\tif (variantId === key || collectionId === key) acc += quantity * unitPrice\n\n\t\t\treturn acc\n\t\t}, 0)\n\n\t\treturn (total += sum)\n\t}, 0)\n}\n","import { Data, LineItem } from \"../interface/common.schema\"\nimport {\n\tApplyBuyXGetYDiscount,\n\tApplyFreeDiscount,\n\tApplyPercentageAndAmountDiscount\n} from \"../interface/offerApplies.core.schema\"\nimport { getLineItemsObj } from \"../utils/common.utils\"\nimport {\n\tcombineSchemaOfferArray,\n\tfindOverAllCartTotal,\n\tfindUserProductCartTotal\n} from \"../utils/plugin.utils\"\n\nexport const applyPercentageAndAmountDiscount = (\n\tdata: ApplyPercentageAndAmountDiscount\n): Array<object> => {\n\tconst { offerCategory, buyOfferType, discountType, discountValue } = data\n\n\tconst { lineItems, customGetProduct, customGetCollection } = data\n\n\tconst getCombinedArray = combineSchemaOfferArray(data)\n\n\tconst sanitizedLineItem =\n\t\tbuyOfferType === \"overAll\" &&\n\t\tcustomGetProduct.length <= 0 &&\n\t\tcustomGetCollection.length <= 0\n\t\t\t? lineItems\n\t\t\t: getCombinedArray\n\n\tconst cartTotal =\n\t\tbuyOfferType === \"overAll\"\n\t\t\t? findOverAllCartTotal(sanitizedLineItem)\n\t\t\t: findUserProductCartTotal({ sanitizedLineItem, lineItems })\n\n\tconst percentageDiscountValue =\n\t\tdiscountType === \"percentage\" && discountValue >= 100 ? 100 : discountValue\n\n\tconst getOffer: object[] = []\n\n\tsanitizedLineItem.forEach((key: any) => {\n\t\tif (typeof key === \"string\") {\n\t\t\tlineItems.forEach((lineItem: LineItem) => {\n\t\t\t\tconst { collectionId, variantId } = lineItem || {}\n\n\t\t\t\tif (variantId === key || collectionId === key) {\n\t\t\t\t\tconst value = applyPercentageAndAmountOffer(\n\t\t\t\t\t\tofferCategory,\n\t\t\t\t\t\tlineItem,\n\t\t\t\t\t\tdiscountType,\n\t\t\t\t\t\tdiscountValue,\n\t\t\t\t\t\tpercentageDiscountValue,\n\t\t\t\t\t\tcartTotal\n\t\t\t\t\t)\n\n\t\t\t\t\tgetOffer.push(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst value = applyPercentageAndAmountOffer(\n\t\t\tofferCategory,\n\t\t\tkey,\n\t\t\tdiscountType,\n\t\t\tdiscountValue,\n\t\t\tpercentageDiscountValue,\n\t\t\tcartTotal\n\t\t)\n\n\t\tgetOffer.push(value)\n\t})\n\n\treturn getOffer\n}\n\nexport const applyPercentageAndAmountOffer = (\n\tofferCategory: string,\n\tlineItem: LineItem,\n\tdiscountType: string,\n\tdiscountValue: number,\n\tpercentageDiscountValue: number,\n\tcartTotal: number\n): object => {\n\tconst { unitPrice, quantity, variantId, productId, lineItemHandle } = lineItem || {}\n\n\tif (discountType === \"percentage\") {\n\t\tconst getEditedPrice =\n\t\t\tquantity * unitPrice - quantity * unitPrice * (percentageDiscountValue / 100)\n\n\t\tconst finalDiscount = {\n\t\t\tproductId,\n\t\t\tvariantId,\n\t\t\tquantity: quantity,\n\t\t\tunitPrice: getEditedPrice / quantity,\n\t\t\tlineItemHandle,\n\t\t\tdiscountType: offerCategory,\n\t\t\tdiscountValue: `You got ${percentageDiscountValue}% off`,\n\t\t\tcustomLineItemType: \"REGULAR\"\n\t\t}\n\t\treturn finalDiscount\n\t}\n\n\tif (discountType === \"amount\") {\n\t\tconst getPercentage = ((quantity * unitPrice) / cartTotal) * 100\n\n\t\tconst getPercentageAmount = (getPercentage / 100) * discountValue\n\n\t\tconst getEditedPrice =\n\t\t\tquantity * unitPrice >= getPercentageAmount\n\t\t\t\t? quantity * unitPrice - getPercentageAmount\n\t\t\t\t: 0\n\n\t\tconst finalAmount = getEditedPrice !== 0 ? getEditedPrice / quantity : 0\n\n\t\tconst finalDiscount = {\n\t\t\tproductId,\n\t\t\tvariantId,\n\t\t\tquantity: quantity,\n\t\t\tunitPrice: finalAmount,\n\t\t\tlineItemHandle,\n\t\t\tdiscountType: offerCategory,\n\t\t\tdiscountValue: `You save {{currency}}${getPercentageAmount.toFixed(3)}`,\n\t\t\tcustomLineItemType: \"REGULAR\"\n\t\t}\n\n\t\treturn finalDiscount\n\t}\n\n\treturn {}\n}\n\nexport const applyBuyXChooseYDiscount = (data: ApplyBuyXGetYDiscount): Array<object> => {\n\tconst { offerCategory, getProducts, customGetProduct, lineItems, getProductCount } = data\n\n\tconst sanitizedLineItem = getLineItemsObj(lineItems)\n\n\tconst filterGetProduct = customGetProduct.filter((id: string) => sanitizedLineItem[id])\n\n\tconst sortFilteredArray = filterGetProduct.sort(\n\t\t(start: string, next: string) =>\n\t\t\tsanitizedLineItem[start].unitPrice - sanitizedLineItem[next].unitPrice\n\t)\n\n\tconst getOffer: object[] = []\n\n\tlet localProductCountTrack = getProductCount\n\n\tsortFilteredArray.forEach((id: string, index: number) => {\n\t\tif (localProductCountTrack) {\n\t\t\tconst isGetProductIdInLineitem = sanitizedLineItem[id] ? true : false\n\n\t\t\tconst { productId, variantId, quantity, unitPrice, lineItemHandle } =\n\t\t\t\tsanitizedLineItem[id] || {}\n\n\t\t\tconst customFreeQuantity =\n\t\t\t\tlocalProductCountTrack > quantity ? quantity : localProductCountTrack\n\n\t\t\tlocalProductCountTrack -= quantity\n\n\t\t\tif (localProductCountTrack < 0) localProductCountTrack = 0\n\n\t\t\tconst getFreeOfferValue = applyFreeDiscount({\n\t\t\t\tproductId,\n\t\t\t\tvariantId,\n\t\t\t\tlineItemHandle,\n\t\t\t\tquantity,\n\t\t\t\tgetProductCount: customFreeQuantity,\n\t\t\t\tunitPrice,\n\t\t\t\tofferCategory,\n\t\t\t\tcustomGetProductId: getProducts[index]?.productId,\n\t\t\t\tcustomGetVariantId: getProducts[index]?.variantId,\n\t\t\t\tcustomGetProductPrice: getProducts[index]?.productPrice,\n\t\t\t\tisGetProductIdInLineitem\n\t\t\t})\n\n\t\t\tgetOffer.push(getFreeOfferValue)\n\t\t}\n\t})\n\n\treturn getOffer\n}\n\nexport const applyBuyXGetYDiscount = (data: ApplyBuyXGetYDiscount): Array<object> => {\n\tconst { offerCategory, getProducts = [], customGetProduct, lineItems, getProductCount } = data\n\n\tconst sanitizedLineItem = getLineItemsObj(lineItems)\n\n\tconst getOffer: object[] = []\n\n\tcustomGetProduct.forEach((id: string, index: number) => {\n\t\tconst isGetProductIdInLineitem = sanitizedLineItem[id] ? true : false\n\n\t\tconst { productId, variantId, quantity, unitPrice, lineItemHandle } =\n\t\t\tsanitizedLineItem[id] || {}\n\n\t\tconst getFreeOfferValue = applyFreeDiscount({\n\t\t\tproductId,\n\t\t\tvariantId,\n\t\t\tlineItemHandle,\n\t\t\tquantity,\n\t\t\tgetProductCount,\n\t\t\tunitPrice,\n\t\t\tofferCategory,\n\t\t\tcustomGetProductId: getProducts[index]?.productId,\n\t\t\tcustomGetVariantId: getProducts[index]?.variantId,\n\t\t\tcustomGetProductPrice: getProducts[index]?.productPrice,\n\t\t\tisGetProductIdInLineitem\n\t\t})\n\n\t\tgetOffer.push(getFreeOfferValue)\n\t})\n\n\treturn getOffer\n}\n\nexport const applyFreeDiscount = (data: ApplyFreeDiscount): object => {\n\tconst {\n\t\tofferCategory,\n\t\tgetProductCount,\n\t\tcustomGetProductId,\n\t\tcustomGetVariantId,\n\t\tisGetProductIdInLineitem\n\t} = data\n\n\tconst {\n\t\tproductId,\n\t\tvariantId,\n\t\tlineItemHandle,\n\t\tquantity = getProductCount,\n\t\tunitPrice,\n\t\tcustomGetProductPrice\n\t} = data\n\n\tconst customFreeQuantity =\n\t\tisGetProductIdInLineitem && getProductCount > quantity ? getProductCount : quantity\n\n\tconst customUnitPrice = customFreeQuantity === getProductCount ? 0 : unitPrice\n\n\tconst customDiscountType = customFreeQuantity >= getProductCount ? offerCategory : \"\"\n\n\tconst customDiscountValue =\n\t\tcustomFreeQuantity >= getProductCount\n\t\t\t? `Buy ${customFreeQuantity}, Get ${getProductCount} Free and ${\n\t\t\t\t\tcustomFreeQuantity - getProductCount\n\t\t\t  } For the Same Price.`\n\t\t\t: \"\"\n\n\tconst offerValue = {\n\t\tproductId: productId || customGetProductId,\n\t\tvariantId: variantId || customGetVariantId,\n\t\tquantity: customFreeQuantity,\n\t\tfreeQuantity: getProductCount,\n\t\tunitPrice: customUnitPrice,\n\t\tlineItemHandle,\n\t\tdiscountType: customDiscountType,\n\t\tdiscountValue: customDiscountValue,\n\t\tcustomLineItemType: \"REGULAR\",\n\t\tisGetProductIdInLineitem,\n\t\tcustomGetProductPrice\n\t}\n\n\treturn offerValue\n}\n","import { findOfferCategory } from \"./controller/plugin.controller\"\nimport { buildInputData, schemaReBuilder } from \"./utils/common.utils\"\nimport { AppContext, ConfigSchema } from \"./interface/common.schema\"\n\nexport const flow = (appContext: AppContext, configSchema: ConfigSchema[]): string => {\n\tconst { cartLineItems } = appContext\n\n\tconst { lineItems } = cartLineItems\n\n\tconst getOfferCategory = configSchema.map((schema: ConfigSchema) => {\n\t\tconst getConfigSchema = schemaReBuilder(schema)\n\n\t\tconst getBuildInputData = buildInputData(getConfigSchema, lineItems)\n\n\t\treturn findOfferCategory(getBuildInputData)\n\t})\n\n\tconst removeUnitPriceLineItem: object[] = []\n\n\tconst filteredArray = getOfferCategory.filter((output: any) => {\n\t\tconst { schema, totalCartValue, offerApplied, getRemovedProductList } = output\n\n\t\tconst { offerCategory } = schema\n\n\t\tif (!offerApplied)\n\t\t\tremoveUnitPriceLineItem.push({\n\t\t\t\tofferApplied,\n\t\t\t\toutput: [],\n\t\t\t\tgetRemovedProductList,\n\t\t\t\tdisplayText: \"\",\n\t\t\t\ttotalCartValue: 0,\n\t\t\t\tschema\n\t\t\t})\n\n\t\tif (offerCategory === \"automaticOffers\" && offerApplied) return totalCartValue > 0\n\n\t\treturn offerApplied\n\t})\n\n\tconst sortBestOfferData = filteredArray.sort(\n\t\t(start: any, next: any) => start.totalCartValue - next.totalCartValue\n\t)\n\n\tconst getBestOfferData =\n\t\tsortBestOfferData.length > 0 ? sortBestOfferData[0] : removeUnitPriceLineItem[0]\n\n\treturn JSON.stringify(getBestOfferData)\n}\n","import {\n\tfindPercentageAmountDiscounts,\n\tfindBuyXChooseYDiscounts,\n\tfindBuyXGetYDiscounts\n} from \"../service/discount.core\"\n\nexport const findOfferCategory = (data: any): object => {\n\tconst { offerCategory } = data\n\n\tswitch (offerCategory) {\n\t\tcase \"percentageDiscount\":\n\t\t\treturn findPercentageAmountDiscounts(data)\n\n\t\tcase \"flatDiscount\":\n\t\t\treturn findPercentageAmountDiscounts(data)\n\n\t\tcase \"buyXGetY\":\n\t\t\treturn findBuyXChooseYDiscounts(data)\n\n\t\tcase \"automaticOffers\":\n\t\t\treturn findBuyXGetYDiscounts(data)\n\n\t\tdefault:\n\t\t\treturn {}\n\t}\n}\n","import {\n\tapplyPercentageAndAmountDiscount,\n\tapplyBuyXGetYDiscount,\n\tapplyBuyXChooseYDiscount\n} from \"./offerApplies.core\"\nimport {\n\tvalidateInputData,\n\tvalidateOverAllData,\n\tvalidateGetProductCount,\n\tvalidateBuyArrayAvaliable,\n\tvalidateGetArrayAvaliable,\n\tafterDiscountCalcCartTotal,\n\tfindFreeOfferOverAllCartValue\n} from \"../utils/plugin.utils\"\nimport { FindPercentageAmountDiscounts } from \"../interface/discount.core.schema\"\n\nexport const findPercentageAmountDiscounts = (data: FindPercentageAmountDiscounts): object => {\n\tconst {\n\t\tgetRemovedProductList,\n\t\tlineItems,\n\t\tbuyOfferType,\n\t\tcustomGetProduct,\n\t\tcustomGetCollection,\n\t\tdisplayText = \"\",\n\t\tgetConfigSchema,\n\t\tofferCategory\n\t} = data\n\n\tconst isValidInput = buyOfferType !== \"overAll\" ? validateInputData(data) : false\n\n\tconst buyArrayAvaliable =\n\t\tbuyOfferType !== \"overAll\" &&\n\t\t(customGetProduct.length > 0 || customGetCollection.length > 0)\n\t\t\t? validateBuyArrayAvaliable(data)\n\t\t\t: true\n\n\tconst getArrayAvaliable =\n\t\tbuyOfferType !== \"overAll\" &&\n\t\t(customGetProduct.length > 0 || customGetCollection.length > 0)\n\t\t\t? validateGetArrayAvaliable(data)\n\t\t\t: true\n\n\tconst isOverAllGetLevelValid =\n\t\tbuyOfferType === \"overAll\" &&\n\t\t(customGetProduct.length > 0 || customGetCollection.length > 0)\n\t\t\t? validateGetArrayAvaliable(data)\n\t\t\t: true\n\n\tconst isOverAllValid =\n\t\tbuyOfferType === \"overAll\" && isOverAllGetLevelValid ? validateOverAllData(data) : false\n\n\tconst getDiscoutOffer =\n\t\t(isOverAllValid || isValidInput) && buyArrayAvaliable && getArrayAvaliable\n\t\t\t? applyPercentageAndAmountDiscount(data)\n\t\t\t: []\n\n\tconst displayTextHtmlBuilder =\n\t\tgetDiscoutOffer.length > 0 && displayText.length > 0 ? displayText : \"\"\n\n\tconst totalCartValue =\n\t\tgetDiscoutOffer.length > 0\n\t\t\t? afterDiscountCalcCartTotal(lineItems, getDiscoutOffer, offerCategory)\n\t\t\t: 0\n\n\tconst offerApplied = getDiscoutOffer.length > 0 ? true : false\n\n\treturn {\n\t\tofferApplied,\n\t\toutput: getDiscoutOffer,\n\t\tgetRemovedProductList,\n\t\tdisplayText: displayTextHtmlBuilder,\n\t\ttotalCartValue,\n\t\tschema: getConfigSchema\n\t}\n}\n\nexport const findBuyXChooseYDiscounts = (data: FindPercentageAmountDiscounts): object => {\n\tconst {\n\t\tgetRemovedProductList,\n\t\tgetConfigSchema,\n\t\tlineItems,\n\t\tbuyOfferType,\n\t\tdisplayText,\n\t\tofferCategory\n\t} = data\n\n\tconst isValidInput =\n\t\tbuyOfferType !== \"overAll\" ? validateInputData(data) : validateOverAllData(data)\n\n\tconst isGetProductValid = validateGetProductCount(data)\n\n\tconst getDiscoutOffer = isValidInput && isGetProductValid ? applyBuyXChooseYDiscount(data) : []\n\n\tconst displayTextHtmlBuilder =\n\t\tgetDiscoutOffer.length > 0 && displayText.length > 0 ? displayText : \"\"\n\n\tconst totalCartValue =\n\t\tgetDiscoutOffer.length > 0\n\t\t\t? afterDiscountCalcCartTotal(lineItems, getDiscoutOffer, offerCategory)\n\t\t\t: 0\n\n\tconst offerApplied = getDiscoutOffer.length > 0 ? true : false\n\n\treturn {\n\t\tofferApplied,\n\t\toutput: getDiscoutOffer,\n\t\tgetRemovedProductList,\n\t\tdisplayText: displayTextHtmlBuilder,\n\t\ttotalCartValue,\n\t\tschema: getConfigSchema\n\t}\n}\n\nexport const findBuyXGetYDiscounts = (data: FindPercentageAmountDiscounts): object => {\n\tconst {\n\t\tgetRemovedProductList,\n\t\tgetConfigSchema,\n\t\tlineItems,\n\t\tbuyOfferType,\n\t\tdisplayText,\n\t\tofferCategory\n\t} = data\n\n\tconst isValidInput =\n\t\tbuyOfferType !== \"overAll\" ? validateInputData(data) : validateOverAllData(data)\n\n\tconst getDiscoutOffer = isValidInput ? applyBuyXGetYDiscount(data) : []\n\n\tconst displayTextHtmlBuilder =\n\t\tgetDiscoutOffer.length > 0 && displayText.length > 0 ? displayText : \"\"\n\n\tconst totalCartValue =\n\t\tgetDiscoutOffer.length > 0\n\t\t\t? afterDiscountCalcCartTotal(lineItems, getDiscoutOffer, offerCategory)\n\t\t\t: 0\n\n\tconst offerApplied = getDiscoutOffer.length > 0 ? true : false\n\n\treturn {\n\t\tofferApplied,\n\t\toutput: getDiscoutOffer,\n\t\tgetRemovedProductList,\n\t\tdisplayText: displayTextHtmlBuilder,\n\t\ttotalCartValue,\n\t\tschema: getConfigSchema\n\t}\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getLineItemsObj","lineItems","reduce","acc","lineItem","findOverAllCartTotal","afterDiscountCalcCartTotal","getDiscoutOffer","offerCategory","variantId","actualUnitPrice","actualQuantity","offerAppliesUnitPrice","offerAppliesQuantity","freeQuantity","currentLineItemTotal","offerLineItemTotal","findOfferLineItemTotal","validateInputData","data","cartType","cartValue","getCombinedArray","customBuyCollection","customGetCollection","customBuyProduct","customGetProduct","getProductCount","xValue","length","concat","yValue","combineSchemaInputArray","total","id","collectionId","quantity","unitPrice","validateOverAllData","validateGetArrayAvaliable","some","applyPercentageAndAmountOffer","discountType","discountValue","percentageDiscountValue","cartTotal","productId","lineItemHandle","getEditedPrice","customLineItemType","getPercentageAmount","toFixed","applyFreeDiscount","customGetProductId","customGetVariantId","isGetProductIdInLineitem","customGetProductPrice","customFreeQuantity","flow","appContext","configSchema","getOfferCategory","map","schema","getConfigSchema","buyCollections","getCollections","buyProducts","getProducts","buyVariantIdList","product","getVariantIdList","buyCollectionIdList","collection","getCollectionIdList","schemaReBuilder","getBuildInputData","getRemovedProductList","originalUnitPrice","removeExistingDiscount","modifiedLineItem","resetInputLineItem","buildInputData","buyOfferType","displayText","isValidInput","buyArrayAvaliable","validateBuyArrayAvaliable","getArrayAvaliable","isOverAllGetLevelValid","buyAlternativeArray","getAlternativeArray","combineSchemaOfferArray","sanitizedLineItem","findUserProductCartTotal","getOffer","forEach","push","applyPercentageAndAmountDiscount","displayTextHtmlBuilder","totalCartValue","offerApplied","output","findPercentageAmountDiscounts","isGetProductValid","count","validateGetProductCount","sortFilteredArray","filter","sort","start","next","localProductCountTrack","index","getFreeOfferValue","productPrice","applyBuyXChooseYDiscount","findBuyXChooseYDiscounts","applyBuyXGetYDiscount","findBuyXGetYDiscounts","findOfferCategory","removeUnitPriceLineItem","sortBestOfferData","getBestOfferData","JSON","stringify"],"sourceRoot":""}