{"version":3,"file":"vajroPlugin.js","mappings":"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","sources":["webpack://vajroPlugin/webpack/bootstrap","webpack://vajroPlugin/webpack/runtime/define property getters","webpack://vajroPlugin/webpack/runtime/hasOwnProperty shorthand","webpack://vajroPlugin/webpack/runtime/make namespace object","webpack://vajroPlugin/./src/utils/common.utils.ts","webpack://vajroPlugin/./src/utils/plugin.utils.ts","webpack://vajroPlugin/./src/service/offerApplies.core.ts","webpack://vajroPlugin/./src/index.ts","webpack://vajroPlugin/./src/controller/plugin.controller.ts","webpack://vajroPlugin/./src/service/discount.core.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n\tConfigSchema,\n\tBuyProduct,\n\tGetProduct,\n\tBuyCollection,\n\tGetCollection,\n\tLineItem,\n\tLineItemObject,\n\tBuildInputData\n} from \"../interface/common.schema\"\n\nexport const schemaReBuilder = (configSchema: ConfigSchema): object => {\n\tconst {\n\t\tbuyCollections = [],\n\t\tgetCollections = [],\n\t\tbuyProducts = [],\n\t\tgetProducts = [],\n\t\tgetProductCount\n\t} = configSchema\n\n\tconst buyVariantIdList = buyProducts.map((product: BuyProduct) => product.variantId)\n\n\tconfigSchema.customBuyProduct = buyVariantIdList\n\n\tconst getVariantIdList = getProducts.map((product: GetProduct) => product.variantId)\n\n\tconfigSchema.customGetProduct = getVariantIdList\n\n\tconst buyCollectionIdList = buyCollections.map(\n\t\t(collection: BuyCollection) => collection.collectionId\n\t)\n\n\tconfigSchema.customBuyCollection = buyCollectionIdList\n\n\tconst getCollectionIdList = getCollections.map(\n\t\t(collection: GetCollection) => collection.collectionId\n\t)\n\n\tconfigSchema.customGetCollection = getCollectionIdList\n\n\tif (!getProductCount) configSchema.getProductCount = 0\n\n\treturn configSchema\n}\n\nexport const buildInputData = (\n\tgetConfigSchema: BuildInputData | any,\n\tlineItems: LineItem[]\n): object => {\n\tconst getRemovedProductList = removeExistingDiscount(lineItems) || []\n\n\tconst modifiedLineItem = resetInputLineItem(lineItems)\n\n\tconst config = {\n\t\tgetConfigSchema,\n\t\t...getConfigSchema,\n\t\tlineItems: modifiedLineItem,\n\t\tgetRemovedProductList\n\t}\n\n\treturn config\n}\n\nexport const resetInputLineItem = (lineItems: LineItem[]): Array<LineItem> => {\n\tconst modifiedLineItem = lineItems.map((lineItem: LineItem) => {\n\t\tconst { originalUnitPrice } = lineItem\n\n\t\tlineItem.unitPrice = originalUnitPrice\n\n\t\treturn lineItem\n\t})\n\n\treturn modifiedLineItem\n}\n\nexport const removeExistingDiscount = (lineItems: LineItem[]): Array<object> => {\n\tconst getRemoveItemsList = lineItems\n\n\treturn getRemoveItemsList.map((lineItem: LineItem) => {\n\t\tconst { originalUnitPrice } = lineItem\n\n\t\tlineItem.unitPrice = originalUnitPrice\n\n\t\treturn lineItem\n\t})\n}\n\nexport const getLineItemsObj = (lineItems: any[]): LineItemObject => {\n\treturn lineItems.reduce((acc: LineItemObject, lineItem: LineItem) => {\n\t\tconst { variantId } = lineItem\n\n\t\tacc[variantId] = lineItem\n\n\t\treturn acc\n\t}, {})\n}\n\nexport const constructDisplayTextHtmlBuilder = (displayText: string): string => {\n\treturn `<!DOCTYPE html>\n\t<html lang=\"en\">\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\" />\n\t\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n\t\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n\t\t</head>\n\t\t<body style=\"min-width: auto; min-height: auto\">\n\t\t\t<h2 style=\"text-align: center;\"><b>${displayText}</b></h2>\n\t\t</body>\n\t</html>`\n}\n","import {\n\tCombineBuyConfigArrays,\n\tCombineSchemaOfferArray,\n\tFindUserProductCartTotal,\n\tValidateBuyArrayAvaliable,\n\tValidateGetArrayAvaliable,\n\tValidateGetProductCount,\n\tValidateInputData,\n\tValidateOverAllData\n} from \"../interface/plugin.utils.schema\"\nimport { LineItem } from \"../interface/common.schema\"\nimport { getLineItemsObj } from \"./common.utils\"\n\nexport const combineBuyConfigArrays = (data: CombineBuyConfigArrays): Array<string> => {\n\tconst { customBuyCollection, customBuyProduct } = data\n\n\treturn customBuyProduct.length > 0 || customBuyCollection.length > 0\n\t\t? customBuyProduct.concat(customBuyCollection)\n\t\t: []\n}\n\nexport const combineSchemaOfferArray = (data: CombineSchemaOfferArray): any => {\n\tconst { customBuyCollection, customGetCollection, customBuyProduct, customGetProduct } = data\n\n\tconst xValue = customGetProduct.length > 0 ? customGetProduct : customBuyProduct\n\n\tconst yValue = customGetCollection.length > 0 ? customGetCollection : customBuyCollection\n\n\tconst buyAlternativeArray =\n\t\tcustomBuyProduct.length > 0 && customGetCollection.length > 0 ? customGetCollection : []\n\n\tconst getAlternativeArray =\n\t\tcustomGetProduct.length > 0 && customBuyCollection.length > 0 ? customGetProduct : []\n\n\tconst combinedArray =\n\t\tbuyAlternativeArray.length > 0 || getAlternativeArray.length > 0\n\t\t\t? buyAlternativeArray.concat(getAlternativeArray)\n\t\t\t: xValue.concat(yValue)\n\n\treturn combinedArray\n}\n\nexport const findOverAllCartTotal = (lineItems: LineItem[]): number => {\n\treturn lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { unitPrice, quantity } = lineItem\n\n\t\treturn (acc += unitPrice * quantity)\n\t}, 0)\n}\n\nexport const findOfferLineItemTotal = (lineItems: LineItem[]): number => {\n\treturn lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { customGetProductPrice, freeQuantity } = lineItem\n\n\t\treturn (acc += customGetProductPrice * freeQuantity)\n\t}, 0)\n}\n\nexport const validateInputData = (data: ValidateInputData): boolean => {\n\tconst { cartType, cartValue, lineItems } = data\n\n\tconst getCombinedArray = combineBuyConfigArrays(data)\n\n\tconst total = getCombinedArray.reduce((total: number, id: string) => {\n\t\tconst sum = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId, quantity, unitPrice } = lineItem || {}\n\n\t\t\tif (variantId === id || collectionId === id) {\n\t\t\t\tconst currentValue = cartType === \"amount\" ? quantity * unitPrice : quantity\n\n\t\t\t\tacc += currentValue\n\t\t\t}\n\n\t\t\treturn acc\n\t\t}, 0)\n\n\t\treturn (total += sum)\n\t}, 0)\n\n\treturn total >= cartValue\n}\n\nexport const validateOverAllData = (data: ValidateOverAllData): boolean => {\n\tconst { cartType, cartValue, lineItems } = data\n\n\tconst total = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { quantity, unitPrice } = lineItem\n\n\t\tconst currentValue = cartType === \"amount\" ? quantity * unitPrice : quantity\n\n\t\treturn (acc += currentValue)\n\t}, 0)\n\n\treturn total >= cartValue\n}\n\nexport const buyXChooseYInputValidation = (data: ValidateInputData): boolean => {\n\tconst {\n\t\tcartType,\n\t\tcartValue,\n\t\tlineItems,\n\t\tbuyOfferType,\n\t\tgetProducts,\n\t\tgetProductCount,\n\t\tofferCategory\n\t} = data\n\n\tconst sanitizedGetProduct = getLineItemsObj(getProducts)\n\n\tconst buyCombinedArray = combineBuyConfigArrays(data)\n\n\tconst total = buyCombinedArray.reduce((total: number, id: string) => {\n\t\tconst sum = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId, quantity, unitPrice } = lineItem || {}\n\n\t\t\tif (variantId === id || collectionId === id) {\n\t\t\t\tconst currentValue = cartType === \"amount\" ? quantity * unitPrice : quantity\n\n\t\t\t\tacc += currentValue\n\t\t\t}\n\n\t\t\treturn acc\n\t\t}, 0)\n\n\t\treturn (total += sum)\n\t}, 0)\n\n\tif (buyOfferType === \"collections\") {\n\t\tconst getProductExist = lineItems.some((lineItem: LineItem) => {\n\t\t\tconst { variantId } = lineItem || {}\n\n\t\t\treturn sanitizedGetProduct[variantId]\n\t\t})\n\n\t\tconst normaliseValue =\n\t\t\tcartType !== \"amount\" && getProductExist ? total - getProductCount : total\n\n\t\treturn offerCategory === \"automaticOffers\"\n\t\t\t? total >= cartValue\n\t\t\t: normaliseValue >= cartValue\n\t}\n\n\treturn total >= cartValue\n}\n\nexport const buyXChooseYOverAllValidation = (data: ValidateInputData): boolean => {\n\tconst { cartType, cartValue, lineItems, getProducts, getProductCount, offerCategory } = data\n\n\tconst sanitizedGetProduct = getLineItemsObj(getProducts)\n\n\tconst total = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\tconst { quantity, unitPrice } = lineItem\n\n\t\tconst currentValue = cartType === \"amount\" ? quantity * unitPrice : quantity\n\n\t\treturn (acc += currentValue)\n\t}, 0)\n\n\tconst getProductExist = lineItems.some((lineItem: LineItem) => {\n\t\tconst { variantId } = lineItem || {}\n\n\t\treturn sanitizedGetProduct[variantId]\n\t})\n\n\tconst normaliseValue =\n\t\tcartType !== \"amount\" && getProductExist ? total - getProductCount : total\n\n\treturn offerCategory === \"automaticOffers\" ? total >= cartValue : normaliseValue >= cartValue\n}\n\nexport const validateBuyArrayAvaliable = (data: ValidateBuyArrayAvaliable): boolean => {\n\tconst { customBuyProduct, customBuyCollection, lineItems } = data\n\n\tconst validationArray = customBuyProduct.concat(customBuyCollection)\n\n\treturn validationArray.some((id: string) => {\n\t\treturn lineItems.some((lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId } = lineItem || {}\n\n\t\t\treturn variantId === id || collectionId === id\n\t\t})\n\t})\n}\n\nexport const validateGetArrayAvaliable = (data: ValidateGetArrayAvaliable): boolean => {\n\tconst { customGetProduct, customGetCollection, lineItems } = data\n\n\tconst validationArray = customGetProduct.concat(customGetCollection)\n\n\treturn validationArray.some((id: string) => {\n\t\treturn lineItems.some((lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId } = lineItem || {}\n\n\t\t\treturn variantId === id || collectionId === id\n\t\t})\n\t})\n}\n\nexport const validateGetProductCount = (data: ValidateGetProductCount): boolean => {\n\tconst { customGetProduct, getProductCount, lineItems } = data\n\n\tconst quantity = customGetProduct.reduce((count: number, id: string) => {\n\t\tconst sum = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId, quantity } = lineItem || {}\n\n\t\t\tif (variantId === id || collectionId === id) acc += quantity\n\n\t\t\treturn acc\n\t\t}, 0)\n\n\t\treturn (count += sum)\n\t}, 0)\n\n\treturn quantity >= getProductCount\n}\n\nexport const findUserProductCartTotal = (data: FindUserProductCartTotal): number => {\n\tconst { sanitizedLineItem, lineItems } = data\n\n\treturn sanitizedLineItem.reduce((total: number, key: string) => {\n\t\tconst sum = lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { collectionId, variantId, quantity, unitPrice } = lineItem || {}\n\n\t\t\tif (variantId === key || collectionId === key) acc += quantity * unitPrice\n\n\t\t\treturn acc\n\t\t}, 0)\n\n\t\treturn (total += sum)\n\t}, 0)\n}\n","import { LineItem } from \"../interface/common.schema\"\nimport {\n\tApplyBuyXGetYDiscount,\n\tApplyFreeDiscount,\n\tApplyPercentageAndAmountDiscount\n} from \"../interface/offerApplies.core.schema\"\nimport { getLineItemsObj } from \"../utils/common.utils\"\nimport {\n\tcombineSchemaOfferArray,\n\tfindOfferLineItemTotal,\n\tfindOverAllCartTotal,\n\tfindUserProductCartTotal\n} from \"../utils/plugin.utils\"\n\nexport const applyPercentageAndAmountDiscount = (\n\tdata: ApplyPercentageAndAmountDiscount\n): Array<object> => {\n\tconst { offerCategory, discountType, discountValue } = data\n\n\tconst { lineItems, customGetProduct, customGetCollection } = data\n\n\tconst getCombinedArray = combineSchemaOfferArray(data)\n\n\tconst sanitizedLineItem =\n\t\tcustomGetProduct.length <= 0 && customGetCollection.length <= 0\n\t\t\t? lineItems\n\t\t\t: getCombinedArray\n\n\tconst cartTotal =\n\t\tcustomGetProduct.length <= 0 && customGetCollection.length <= 0\n\t\t\t? findOverAllCartTotal(sanitizedLineItem)\n\t\t\t: findUserProductCartTotal({ sanitizedLineItem, lineItems })\n\n\tconst percentageDiscountValue =\n\t\tdiscountType === \"percentage\" && discountValue >= 100 ? 100 : discountValue\n\n\tconst getOffer: object[] = []\n\n\tsanitizedLineItem.forEach((key: any) => {\n\t\tif (typeof key === \"string\") {\n\t\t\tlineItems.forEach((lineItem: LineItem) => {\n\t\t\t\tconst { collectionId, variantId } = lineItem || {}\n\n\t\t\t\tif (variantId === key || collectionId === key) {\n\t\t\t\t\tconst value = applyPercentageAndAmountOffer(\n\t\t\t\t\t\tofferCategory,\n\t\t\t\t\t\tlineItem,\n\t\t\t\t\t\tdiscountType,\n\t\t\t\t\t\tdiscountValue,\n\t\t\t\t\t\tpercentageDiscountValue,\n\t\t\t\t\t\tcartTotal\n\t\t\t\t\t)\n\n\t\t\t\t\tgetOffer.push(value)\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tconst value = applyPercentageAndAmountOffer(\n\t\t\t\tofferCategory,\n\t\t\t\tkey,\n\t\t\t\tdiscountType,\n\t\t\t\tdiscountValue,\n\t\t\t\tpercentageDiscountValue,\n\t\t\t\tcartTotal\n\t\t\t)\n\n\t\t\tgetOffer.push(value)\n\t\t}\n\t})\n\n\treturn getOffer\n}\n\nexport const applyBuyXChooseYDiscount = (data: ApplyBuyXGetYDiscount): Array<object> => {\n\tconst { offerCategory, getProducts, customGetProduct, lineItems, getProductCount } = data\n\n\tconst sanitizedLineItem = getLineItemsObj(lineItems)\n\n\tconst filterGetProduct = customGetProduct.filter((id: string) => sanitizedLineItem[id])\n\n\tconst sortFilteredArray = filterGetProduct.sort(\n\t\t(start: string, next: string) =>\n\t\t\tsanitizedLineItem[start].unitPrice - sanitizedLineItem[next].unitPrice\n\t)\n\n\tconst getOffer: object[] = []\n\n\tlet localProductCountTrack = getProductCount\n\n\tsortFilteredArray.forEach((id: string, index: number) => {\n\t\tif (localProductCountTrack) {\n\t\t\tconst isGetProductIdInLineitem = sanitizedLineItem[id] ? true : false\n\n\t\t\tconst { productId, variantId, quantity, unitPrice, lineItemHandle } =\n\t\t\t\tsanitizedLineItem[id] || {}\n\n\t\t\tconst customFreeQuantity =\n\t\t\t\tlocalProductCountTrack > quantity ? quantity : localProductCountTrack\n\n\t\t\tlocalProductCountTrack -= quantity\n\n\t\t\tif (localProductCountTrack < 0) localProductCountTrack = 0\n\n\t\t\tconst getFreeOfferValue = applyFreeDiscount({\n\t\t\t\tproductId,\n\t\t\t\tvariantId,\n\t\t\t\tlineItemHandle,\n\t\t\t\tquantity,\n\t\t\t\tgetProductCount: customFreeQuantity,\n\t\t\t\tunitPrice,\n\t\t\t\tofferCategory,\n\t\t\t\tcustomGetProductId: getProducts[index]?.productId,\n\t\t\t\tcustomGetVariantId: getProducts[index]?.variantId,\n\t\t\t\tcustomGetProductPrice: getProducts[index]?.productPrice,\n\t\t\t\tisGetProductIdInLineitem\n\t\t\t})\n\n\t\t\tgetOffer.push(getFreeOfferValue)\n\t\t}\n\t})\n\n\treturn getOffer\n}\n\nexport const applyBuyXGetYDiscount = (data: ApplyBuyXGetYDiscount): Array<object> => {\n\tconst { offerCategory, getProducts = [], customGetProduct, lineItems, getProductCount } = data\n\n\tconst sanitizedLineItem = getLineItemsObj(lineItems)\n\n\tconst getOffer: object[] = []\n\n\tcustomGetProduct.forEach((id: string, index: number) => {\n\t\tconst isGetProductIdInLineitem = sanitizedLineItem[id] ? true : false\n\n\t\tconst { productId, variantId, quantity, unitPrice, lineItemHandle } =\n\t\t\tsanitizedLineItem[id] || {}\n\n\t\tconst getFreeOfferValue = applyFreeDiscount({\n\t\t\tproductId,\n\t\t\tvariantId,\n\t\t\tlineItemHandle,\n\t\t\tquantity,\n\t\t\tgetProductCount,\n\t\t\tunitPrice,\n\t\t\tofferCategory,\n\t\t\tcustomGetProductId: getProducts[index]?.productId,\n\t\t\tcustomGetVariantId: getProducts[index]?.variantId,\n\t\t\tcustomGetProductPrice: getProducts[index]?.productPrice,\n\t\t\tisGetProductIdInLineitem\n\t\t})\n\n\t\tgetOffer.push(getFreeOfferValue)\n\t})\n\n\treturn getOffer\n}\n\nexport const applyPercentageAndAmountOffer = (\n\tofferCategory: string,\n\tlineItem: LineItem,\n\tdiscountType: string,\n\tdiscountValue: number,\n\tpercentageDiscountValue: number,\n\tcartTotal: number\n): object => {\n\tconst { unitPrice, quantity, variantId, productId, lineItemHandle } = lineItem || {}\n\n\tif (discountType === \"percentage\") {\n\t\tconst getEditedPrice =\n\t\t\tquantity * unitPrice - quantity * unitPrice * (percentageDiscountValue / 100)\n\n\t\tconst finalDiscount = {\n\t\t\tproductId,\n\t\t\tvariantId,\n\t\t\tquantity: quantity,\n\t\t\tunitPrice: getEditedPrice / quantity,\n\t\t\tlineItemHandle,\n\t\t\tdiscountType: offerCategory,\n\t\t\tdiscountValue: \"\",\n\t\t\tcustomLineItemType: \"REGULAR\"\n\t\t}\n\t\treturn finalDiscount\n\t}\n\n\tif (discountType === \"amount\") {\n\t\tconst getPercentage = ((quantity * unitPrice) / cartTotal) * 100\n\n\t\tconst getPercentageAmount = (getPercentage / 100) * discountValue\n\n\t\tconst getEditedPrice =\n\t\t\tquantity * unitPrice >= getPercentageAmount\n\t\t\t\t? quantity * unitPrice - getPercentageAmount\n\t\t\t\t: 0\n\n\t\tconst finalAmount = getEditedPrice !== 0 ? getEditedPrice / quantity : 0\n\n\t\tconst finalDiscount = {\n\t\t\tproductId,\n\t\t\tvariantId,\n\t\t\tquantity: quantity,\n\t\t\tunitPrice: finalAmount,\n\t\t\tlineItemHandle,\n\t\t\tdiscountType: offerCategory,\n\t\t\tdiscountValue: \"\",\n\t\t\tcustomLineItemType: \"REGULAR\"\n\t\t}\n\n\t\treturn finalDiscount\n\t}\n\n\treturn {}\n}\n\nexport const applyFreeDiscount = (data: ApplyFreeDiscount): object => {\n\tconst {\n\t\tofferCategory,\n\t\tgetProductCount,\n\t\tcustomGetProductId,\n\t\tcustomGetVariantId,\n\t\tisGetProductIdInLineitem\n\t} = data\n\n\tconst {\n\t\tproductId,\n\t\tvariantId,\n\t\tlineItemHandle,\n\t\tquantity = getProductCount,\n\t\tunitPrice,\n\t\tcustomGetProductPrice\n\t} = data\n\n\tconst customFreeQuantity =\n\t\tisGetProductIdInLineitem && getProductCount > quantity ? getProductCount : quantity\n\n\tconst customUnitPrice = customFreeQuantity === getProductCount ? 0 : unitPrice\n\n\tconst customDiscountType = customFreeQuantity >= getProductCount ? offerCategory : \"\"\n\n\t// const customDiscountValue =\n\t// \tcustomFreeQuantity >= getProductCount\n\t// \t\t? `You Purchased ${customFreeQuantity} Get ${getProductCount} Free and Pay ${\n\t// \t\t\t\tcustomFreeQuantity - getProductCount\n\t// \t\t  } For the Product Price.`\n\t// \t\t: \"\"\n\n\tconst offerValue = {\n\t\tproductId: productId || customGetProductId,\n\t\tvariantId: variantId || customGetVariantId,\n\t\tquantity: customFreeQuantity,\n\t\tfreeQuantity: getProductCount,\n\t\tunitPrice: customUnitPrice,\n\t\tlineItemHandle,\n\t\tdiscountType: customDiscountType,\n\t\tdiscountValue: \"\",\n\t\tcustomLineItemType: \"REGULAR\",\n\t\tisGetProductIdInLineitem,\n\t\tcustomGetProductPrice\n\t}\n\n\treturn offerValue\n}\n\nexport const afterDiscountCalcCartTotal = (\n\tlineItems: LineItem[],\n\tgetDiscoutOffer: any,\n\tofferCategory: string\n): number => {\n\tif (offerCategory !== \"automaticOffers\") {\n\t\tconst sanitizedLineItem = getLineItemsObj(getDiscoutOffer)\n\n\t\treturn lineItems.reduce((acc: number, lineItem: LineItem) => {\n\t\t\tconst { variantId, unitPrice: actualUnitPrice, quantity: actualQuantity } = lineItem\n\n\t\t\tconst {\n\t\t\t\tunitPrice: offerAppliesUnitPrice,\n\t\t\t\tquantity: offerAppliesQuantity,\n\t\t\t\tfreeQuantity = 0\n\t\t\t} = sanitizedLineItem[variantId] || {}\n\n\t\t\tconst finalUnitPrice =\n\t\t\t\tofferAppliesUnitPrice || offerAppliesUnitPrice === 0\n\t\t\t\t\t? offerAppliesUnitPrice\n\t\t\t\t\t: actualUnitPrice\n\n\t\t\tconst localQuantity = offerAppliesQuantity || actualQuantity\n\n\t\t\tconst finalQuantity = localQuantity - freeQuantity\n\n\t\t\treturn (acc += finalUnitPrice * finalQuantity)\n\t\t}, 0)\n\t} else {\n\t\tconst currentLineItemTotal = findOverAllCartTotal(lineItems)\n\n\t\tconst offerLineItemTotal = findOfferLineItemTotal(getDiscoutOffer)\n\n\t\tconst buyXGetYTotal =\n\t\t\tcurrentLineItemTotal > offerLineItemTotal\n\t\t\t\t? currentLineItemTotal - offerLineItemTotal\n\t\t\t\t: currentLineItemTotal\n\n\t\treturn buyXGetYTotal\n\t}\n}\n","import { findOfferCategory } from \"./controller/plugin.controller\"\nimport { buildInputData, schemaReBuilder } from \"./utils/common.utils\"\nimport { AppContext, ConfigSchema } from \"./interface/common.schema\"\n\nexport const flow = (appContext: AppContext, configSchema: ConfigSchema[]): string => {\n\tconst { cartLineItems } = appContext\n\n\tconst { lineItems } = cartLineItems\n\n\tconst getOfferCategory = configSchema.map((schema: ConfigSchema) => {\n\t\tconst getConfigSchema = schemaReBuilder(schema)\n\n\t\tconst getBuildInputData = buildInputData(getConfigSchema, lineItems)\n\n\t\treturn findOfferCategory(getBuildInputData)\n\t})\n\n\tconst defalutFlowOffer: object[] = []\n\n\tconst filteredArray = getOfferCategory.filter((output: any) => {\n\t\tconst { schema, totalCartValue, offerApplied, getRemovedProductList } = output\n\n\t\tconst { offerCategory } = schema\n\n\t\tif (!offerApplied)\n\t\t\tdefalutFlowOffer.push({\n\t\t\t\tofferApplied,\n\t\t\t\toutput: [],\n\t\t\t\tgetRemovedProductList,\n\t\t\t\tdisplayText: \"\",\n\t\t\t\ttotalCartValue: 0,\n\t\t\t\tschema\n\t\t\t})\n\n\t\tif (offerCategory === \"automaticOffers\" && offerApplied) return totalCartValue > 0\n\n\t\treturn offerApplied\n\t})\n\n\tconst sortBestOfferData = filteredArray.sort(\n\t\t(start: any, next: any) => start.totalCartValue - next.totalCartValue\n\t)\n\n\tconst getBestOfferData =\n\t\tsortBestOfferData.length > 0 ? sortBestOfferData[0] : defalutFlowOffer[0]\n\n\treturn JSON.stringify(getBestOfferData)\n}\n","import {\n\tfindPercentageAmountDiscounts,\n\tfindBuyXChooseYDiscounts,\n\tfindBuyXGetYDiscounts\n} from \"../service/discount.core\"\n\nexport const findOfferCategory = (data: any): object => {\n\tconst { offerCategory } = data\n\n\tswitch (offerCategory) {\n\t\tcase \"percentageDiscount\":\n\t\t\treturn findPercentageAmountDiscounts(data)\n\n\t\tcase \"flatDiscount\":\n\t\t\treturn findPercentageAmountDiscounts(data)\n\n\t\tcase \"buyXGetY\":\n\t\t\treturn findBuyXChooseYDiscounts(data)\n\n\t\tcase \"automaticOffers\":\n\t\t\treturn findBuyXGetYDiscounts(data)\n\n\t\tdefault:\n\t\t\treturn {}\n\t}\n}\n","import {\n\tapplyPercentageAndAmountDiscount,\n\tapplyBuyXGetYDiscount,\n\tapplyBuyXChooseYDiscount,\n\tafterDiscountCalcCartTotal\n} from \"./offerApplies.core\"\nimport {\n\tvalidateInputData,\n\tvalidateOverAllData,\n\tvalidateGetProductCount,\n\tvalidateBuyArrayAvaliable,\n\tvalidateGetArrayAvaliable,\n\tbuyXChooseYInputValidation,\n\tbuyXChooseYOverAllValidation\n} from \"../utils/plugin.utils\"\nimport { FindPercentageAmountDiscounts } from \"../interface/discount.core.schema\"\nimport { constructDisplayTextHtmlBuilder } from \"../utils/common.utils\"\n\nexport const findPercentageAmountDiscounts = (data: FindPercentageAmountDiscounts): object => {\n\tconst {\n\t\tgetRemovedProductList,\n\t\tlineItems,\n\t\tbuyOfferType,\n\t\tcustomGetProduct,\n\t\tcustomGetCollection,\n\t\tdisplayText = \"\",\n\t\tgetConfigSchema,\n\t\tofferCategory\n\t} = data\n\n\tconst isValidInput = buyOfferType !== \"overAll\" ? validateInputData(data) : false\n\n\tconst buyArrayAvaliable =\n\t\tbuyOfferType !== \"overAll\" &&\n\t\t(customGetProduct.length > 0 || customGetCollection.length > 0)\n\t\t\t? validateBuyArrayAvaliable(data)\n\t\t\t: true\n\n\tconst getArrayAvaliable =\n\t\tbuyOfferType !== \"overAll\" &&\n\t\t(customGetProduct.length > 0 || customGetCollection.length > 0)\n\t\t\t? validateGetArrayAvaliable(data)\n\t\t\t: true\n\n\tconst isOverAllGetLevelValid =\n\t\tbuyOfferType === \"overAll\" &&\n\t\t(customGetProduct.length > 0 || customGetCollection.length > 0)\n\t\t\t? validateGetArrayAvaliable(data)\n\t\t\t: true\n\n\tconst isOverAllValid =\n\t\tbuyOfferType === \"overAll\" && isOverAllGetLevelValid ? validateOverAllData(data) : false\n\n\tconst getDiscoutOffer =\n\t\t(isOverAllValid || isValidInput) && buyArrayAvaliable && getArrayAvaliable\n\t\t\t? applyPercentageAndAmountDiscount(data)\n\t\t\t: []\n\n\tconst displayTextHtmlBuilder =\n\t\tgetDiscoutOffer.length > 0 && displayText.length > 0\n\t\t\t? constructDisplayTextHtmlBuilder(displayText)\n\t\t\t: \"\"\n\n\tconst totalCartValue =\n\t\tgetDiscoutOffer.length > 0\n\t\t\t? afterDiscountCalcCartTotal(lineItems, getDiscoutOffer, offerCategory)\n\t\t\t: 0\n\n\tconst offerApplied = getDiscoutOffer.length > 0 ? true : false\n\n\treturn {\n\t\tofferApplied,\n\t\toutput: getDiscoutOffer,\n\t\tgetRemovedProductList,\n\t\tdisplayText: displayTextHtmlBuilder,\n\t\ttotalCartValue,\n\t\tschema: getConfigSchema\n\t}\n}\n\nexport const findBuyXChooseYDiscounts = (data: FindPercentageAmountDiscounts): object => {\n\tconst {\n\t\tgetRemovedProductList,\n\t\tgetConfigSchema,\n\t\tlineItems,\n\t\tbuyOfferType,\n\t\tdisplayText,\n\t\tofferCategory\n\t} = data\n\n\tconst isValidInput =\n\t\tbuyOfferType !== \"overAll\"\n\t\t\t? buyXChooseYInputValidation(data)\n\t\t\t: buyXChooseYOverAllValidation(data)\n\n\tconst isGetProductValid = validateGetProductCount(data)\n\n\tconst getDiscoutOffer = isValidInput && isGetProductValid ? applyBuyXChooseYDiscount(data) : []\n\n\tconst displayTextHtmlBuilder =\n\t\tgetDiscoutOffer.length > 0 && displayText.length > 0\n\t\t\t? constructDisplayTextHtmlBuilder(displayText)\n\t\t\t: \"\"\n\n\tconst totalCartValue =\n\t\tgetDiscoutOffer.length > 0\n\t\t\t? afterDiscountCalcCartTotal(lineItems, getDiscoutOffer, offerCategory)\n\t\t\t: 0\n\n\tconst offerApplied = getDiscoutOffer.length > 0 ? true : false\n\n\treturn {\n\t\tofferApplied,\n\t\toutput: getDiscoutOffer,\n\t\tgetRemovedProductList,\n\t\tdisplayText: displayTextHtmlBuilder,\n\t\ttotalCartValue,\n\t\tschema: getConfigSchema\n\t}\n}\n\nexport const findBuyXGetYDiscounts = (data: FindPercentageAmountDiscounts): object => {\n\tconst {\n\t\tgetRemovedProductList,\n\t\tgetConfigSchema,\n\t\tlineItems,\n\t\tbuyOfferType,\n\t\tdisplayText,\n\t\tofferCategory\n\t} = data\n\n\tconst isValidInput =\n\t\tbuyOfferType !== \"overAll\"\n\t\t\t? buyXChooseYInputValidation(data)\n\t\t\t: buyXChooseYOverAllValidation(data)\n\n\tconst getDiscoutOffer = isValidInput ? applyBuyXGetYDiscount(data) : []\n\n\tconst displayTextHtmlBuilder =\n\t\tgetDiscoutOffer.length > 0 && displayText.length > 0\n\t\t\t? constructDisplayTextHtmlBuilder(displayText)\n\t\t\t: \"\"\n\n\tconst totalCartValue =\n\t\tgetDiscoutOffer.length > 0\n\t\t\t? afterDiscountCalcCartTotal(lineItems, getDiscoutOffer, offerCategory)\n\t\t\t: 0\n\n\tconst offerApplied = getDiscoutOffer.length > 0 ? true : false\n\n\treturn {\n\t\tofferApplied,\n\t\toutput: getDiscoutOffer,\n\t\tgetRemovedProductList,\n\t\tdisplayText: displayTextHtmlBuilder,\n\t\ttotalCartValue,\n\t\tschema: getConfigSchema\n\t}\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getLineItemsObj","lineItems","reduce","acc","lineItem","constructDisplayTextHtmlBuilder","displayText","combineBuyConfigArrays","data","customBuyCollection","customBuyProduct","length","concat","findOverAllCartTotal","buyXChooseYInputValidation","cartType","cartValue","buyOfferType","getProducts","getProductCount","offerCategory","sanitizedGetProduct","total","id","collectionId","variantId","quantity","unitPrice","getProductExist","some","buyXChooseYOverAllValidation","validateGetArrayAvaliable","customGetProduct","customGetCollection","applyPercentageAndAmountOffer","discountType","discountValue","percentageDiscountValue","cartTotal","productId","lineItemHandle","getEditedPrice","customLineItemType","getPercentageAmount","applyFreeDiscount","customGetProductId","customGetVariantId","isGetProductIdInLineitem","customFreeQuantity","freeQuantity","customGetProductPrice","afterDiscountCalcCartTotal","getDiscoutOffer","actualUnitPrice","actualQuantity","offerAppliesUnitPrice","offerAppliesQuantity","currentLineItemTotal","offerLineItemTotal","findOfferLineItemTotal","flow","appContext","configSchema","getOfferCategory","map","schema","getConfigSchema","buyCollections","getCollections","buyProducts","buyVariantIdList","product","getVariantIdList","buyCollectionIdList","collection","getCollectionIdList","schemaReBuilder","getBuildInputData","getRemovedProductList","originalUnitPrice","removeExistingDiscount","modifiedLineItem","resetInputLineItem","buildInputData","isValidInput","validateInputData","buyArrayAvaliable","validateBuyArrayAvaliable","getArrayAvaliable","isOverAllGetLevelValid","isOverAllValid","validateOverAllData","getCombinedArray","xValue","yValue","buyAlternativeArray","getAlternativeArray","combineSchemaOfferArray","sanitizedLineItem","findUserProductCartTotal","getOffer","forEach","push","applyPercentageAndAmountDiscount","displayTextHtmlBuilder","totalCartValue","offerApplied","output","findPercentageAmountDiscounts","isGetProductValid","count","validateGetProductCount","sortFilteredArray","filter","sort","start","next","localProductCountTrack","index","getFreeOfferValue","productPrice","applyBuyXChooseYDiscount","findBuyXChooseYDiscounts","applyBuyXGetYDiscount","findBuyXGetYDiscounts","findOfferCategory","defalutFlowOffer","sortBestOfferData","getBestOfferData","JSON","stringify"],"sourceRoot":""}